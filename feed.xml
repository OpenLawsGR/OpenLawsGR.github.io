<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenLaws</title>
    <description>A Project Opening Greek Legislation to Citizens</description>
    <link>http://www.openlaws.gr/</link>
    <atom:link href="http://www.openlaws.gr/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>OpenLawsGR at Hackerspace</title>
        <description>&lt;p&gt;On Saturday, November 19, we had the chance to present our work during an &lt;a href=&quot;https://www.hackerspace.gr/wiki/%CE%A0%CE%B1%CF%81%CE%BF%CF%85%CF%83%CE%AF%CE%B1%CF%83%CE%B7_OpenLaws.gr&quot;&gt;event&lt;/a&gt; that took place at &lt;a href=&quot;https://www.hackerspace.gr/&quot;&gt;Hackerspace.gr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/outside_HSPG.jpg&quot; alt=&quot;Outside HSPG&quot;&gt;&lt;/p&gt;

&lt;p&gt;The presentation (in Greek) can be downloaded from &lt;a href=&quot;https://dl.dropboxusercontent.com/u/104921582/hackerspace_presentation.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/presentation_HSPG.jpg&quot; alt=&quot;During the presentation&quot;&gt;&lt;/p&gt;

&lt;p&gt;During the event we had an interesting discussion with the participants about legal documents parsing and analysis, problems of the Greek legislation system and the roadmap of our future implementation. After receiving some thoughtful remarks, we decided to split the project in two distinct subprojects that will be implemented separately. The first one is about the extraction of the structure of laws and their representation in machine readable format, while the second is about the identification and application of textual modifications. During the next days, we will create two new Github repositories, one for each subproject and we will open issues according to the &lt;a href=&quot;/roadmap&quot;&gt;roadmap&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Thank you guys for hosting and attending this event!&lt;/p&gt;
</description>
        <pubDate>Tue, 22 Nov 2016 00:25:00 +0200</pubDate>
        <link>http://www.openlaws.gr/presentation/2016/11/22/Hackerspace/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/presentation/2016/11/22/Hackerspace/</guid>
      </item>
    
      <item>
        <title>PCI 2016</title>
        <description>&lt;p&gt;Today, it was the second day of the &lt;a href=&quot;http://pci2016.teiwest.gr&quot;&gt;20th Panhellenic Conference on Informatics (PCI 2016)&lt;/a&gt;, which is taking place in Patras from 10-12 November 2016. In this conference we had the chance to present a full paper titled &amp;ldquo;A semi-automatic system for the consolidation of greek legislative texts&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/presentation_pci2016.jpg&quot; alt=&quot;Presenting the paper&quot;&gt;&lt;/p&gt;

&lt;p&gt;The camera ready version of the paper is available &lt;a href=&quot;https://dl.dropboxusercontent.com/u/104921582/A%20semi-automatic%20system%20for%20the%20consolidation%20of%20greek%20legislative%20texts-Camera_Ready.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, the presentation can be downloaded from &lt;a href=&quot;https://dl.dropboxusercontent.com/u/104921582/pci2016_presentation.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Nov 2016 01:35:00 +0200</pubDate>
        <link>http://www.openlaws.gr/publications/2016/11/12/PCI2016/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/publications/2016/11/12/PCI2016/</guid>
      </item>
    
      <item>
        <title>Three legislative stages, three existing projects</title>
        <description>&lt;p&gt;OpenLawsGR is not the only Greek project that focuses on a stage of a legislative process. Two other efforts worth mentioning include &lt;a href=&quot;http://www.democracit.org/&quot;&gt;DemocracIT&lt;/a&gt; and &lt;a href=&quot;http://www.vouliwatch.gr/vouliwatch-in-english/&quot;&gt;VouliWatch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.democracit.org/assets/images/democracit_logo_bg.jpg&quot; alt=&quot;DemocracIT&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.democracit.org/&quot;&gt;DemocracIT&lt;/a&gt; is an open source platform implemented by &lt;a href=&quot;http://www.scify.gr/site/en/&quot;&gt;SciFY&lt;/a&gt;, which facilitates citizens&amp;rsquo; participation at the stage of public consultation and provides tools for the analysis of collected consultation data. For a more detailed description the reader may refer &lt;a href=&quot;http://www.scify.gr/site/en/impact-areas-en/e-democracy/democracit&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.vouliwatch.gr/wp-content/uploads/2014/04/logo-1.jpg&quot; alt=&quot;VouliWatch&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.vouliwatch.gr/vouliwatch-in-english/&quot;&gt;VouliWatch&lt;/a&gt; is a parliamentary monitoring project, aiming at engaging Greek citizens with legislative politics, increasing civil participation in politics and promoting parliamentary transparency and accountability. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/logo.png&quot; alt=&quot;OpenLawsGR&quot;&gt;&lt;/p&gt;

&lt;p&gt;OpenLawsGR, our open source project for the automatic consolidation and versioning of Greek laws, focuses on providing open access to legislation at the stage after it has been voted by the parliament.&lt;/p&gt;
</description>
        <pubDate>Mon, 31 Oct 2016 09:00:00 +0200</pubDate>
        <link>http://www.openlaws.gr/general/2016/10/31/three-legislative-stages-projects/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/general/2016/10/31/three-legislative-stages-projects/</guid>
      </item>
    
      <item>
        <title>Distinction of Different Legislative Text Types</title>
        <description>&lt;p&gt;In this tutorial we focus on the distinction of Greek laws from other types of legislative text (e.g. presidential decrees, ministerial decisions etc.) that are present in the Official Government Gazette issues. While at this stage we put our effort solely on laws, it is our future intention to examine whether modeling regular expressions for structural analysis can be applied to other types of legislative texts (according to the rules that the Central Legislatorial Committee has published). &lt;/p&gt;

&lt;p&gt;A considerable number of Greek laws refers to ratifications of international agreements. In this case, the agreement text is usually incorporated into the PDF file as a scanned image requiring OCR (Optical Character Recognition) techniques, a step that imposes significant obstacles in text analysis. Even if plain text was available, these agreements are usually drafted either in the language of the contracting parties, or in &lt;em&gt;&amp;ldquo;&amp;hellip; Chinese, French, Russian, English and Spanish versions which are equally authentic &amp;hellip;&amp;rdquo;&lt;/em&gt; in accordance to Article 111 of the United Nations Charter. As our patterns are modeled in Greek, the latter would be detrimental for pattern matching within the contents, which is necessary in the framework of the automated recognition and application of modifications or for identifying the structural components of the text. Consequently, these laws should be excluded. &lt;/p&gt;

&lt;p&gt;The distinction is based on the fact that specific words are used to flag the beginning and the end of each legislative text type. For instance, each law always begins with the word &amp;ldquo;Law&amp;rdquo; followed by its number and ends with a reference to the President of the Hellenic Republic. However, we faced several problems during the design phase of the regular expressions that were needed. One problem identified is the ambiguity in the use of the apostrophe in the word &amp;ldquo;ΥΠ&amp;rdquo;, which is used before the word &amp;ldquo;number&amp;rdquo; and after the word &amp;ldquo;law&amp;rdquo; in the Greek language. We observed the use of three different types of apostrophes resulting in difficulty locating and extracting laws. Furthermore, there is also a case where the reference to the President of the Hellenic Republic at the end of the law (Government Gazette 203, Issue A, 2004) was wrong, stating &lt;em&gt;&amp;ldquo;THE PRESIDENT OF THE PARLIAMENT&amp;rdquo;&lt;/em&gt; instead of &amp;ldquo;THE PRESIDENT OF THE HELLENIC REPUBLIC&amp;rdquo;, naming Karolos Papoulias (President of the Hellenic Republic at that time) as the person signing the law.&lt;/p&gt;

&lt;p&gt;The main problem, nevertheless, is the use of Latin characters (looking alike in the the Greek and Latin alphabets, such as O, N or M) mixed with Greek characters in words that are used to flag the start or the end of each law, a case which may pass unnoticed by the reader but causes serious problems in the process of pattern matching.&lt;/p&gt;

&lt;p&gt;Based on the above analysis and observations, fourteen (14) different regular expressions are necessary to identify and export laws texts as shown in the image below (red characters indicate the existence of Latin characters instead of Greek): &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/laws_matching_patterns.jpg&quot; alt=&quot;Regular expressions for the identification of laws&quot;&gt;&lt;/p&gt;

&lt;p&gt;Our analysis on texts published between 2004 and 2015 shows that in a total of 3209 PDF files, 1128 laws have been exported, from which 578 were excluded from further analysis since they were ratifying international agreements that the parliament had approved. As a result, our main experimental sample consists of 550 laws. &lt;/p&gt;

&lt;p&gt;The source code of the module for the extraction of laws from the plain texts of the Government Gazzette issues can be found &lt;a href=&quot;https://github.com/OpenLawsGR/greek_laws_consolidation_code/blob/master/python_code/extract_laws.py&quot;&gt;here&lt;/a&gt; while the code that excludes international agreements &lt;a href=&quot;https://github.com/OpenLawsGR/greek_laws_consolidation_code/blob/master/python_code/split_laws_international_agreements.py&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 25 Oct 2016 16:15:00 +0300</pubDate>
        <link>http://www.openlaws.gr/legislation/code/2016/10/25/Distinction%20of%20Different%20Legislative%20Text%20Types/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/legislation/code/2016/10/25/Distinction%20of%20Different%20Legislative%20Text%20Types/</guid>
      </item>
    
      <item>
        <title>Master thesis presentation</title>
        <description>&lt;p&gt;This project is implemented in the framework of a Master thesis for the postgraduate program Computer Science and Technology at the &lt;a href=&quot;https://www.ceid.upatras.gr/en&quot;&gt;Department of Computer Engineering and Informatics&lt;/a&gt; of the &lt;a href=&quot;http://www.upatras.gr/en&quot;&gt;University of Patras&lt;/a&gt;, which is supervised by &lt;a href=&quot;http://athos.cti.gr/garofalakis/index_en.htm&quot;&gt;Prof. John Garofalakis&lt;/a&gt; and postdoctoral researcher &lt;a href=&quot;http://www.plessas.info/index.php/home-en/&quot;&gt;Athanasios Plessas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last week, the defense presentation of the thesis took place successfully.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/master_thesis_presentation.jpg&quot; alt=&quot;Master thesis presentation&quot;&gt;&lt;/p&gt;

&lt;p&gt;The text of the thesis (in Greek) can be found &lt;a href=&quot;https://dl.dropboxusercontent.com/u/104921582/K.Plessas_Master_Thesis.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The presentation (also in Greek) can be found &lt;a href=&quot;https://dl.dropboxusercontent.com/u/104921582/K.Plessas_Master_Thesis_Presentation.pdf&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
</description>
        <pubDate>Wed, 19 Oct 2016 11:00:00 +0300</pubDate>
        <link>http://www.openlaws.gr/publications/2016/10/19/master-thesis-presentation/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/publications/2016/10/19/master-thesis-presentation/</guid>
      </item>
    
      <item>
        <title>Revised system architecture</title>
        <description>&lt;p&gt;In a &lt;a href=&quot;/legislation/2015/08/30/Methodology/&quot;&gt;previous post&lt;/a&gt; we had presented a general layout of the methodology that we intended to follow. At that time, we wanted to implement a completely automatic system for the consolidation of Greek legislation. However, this proved to be impossible due to errors (e.g. syntax errors) found in the legislative texts. As a result, we had to revise the architecture of our system, adding one more step after that of structural analysis. In this step, we use a validator (parsing the xml documents used for the markup of law texts), which is able to detect xml files with wrong structure (e.g. elements missing or in wrong order). Then, there is a need for manual intervention and correction of these files. The revised architecture is shown below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/architecture.png&quot; alt=&quot;Revised architecture&quot;&gt;&lt;/p&gt;

&lt;p&gt;When writing the &lt;a href=&quot;/legislation/2015/08/30/Methodology/&quot;&gt;initial post&lt;/a&gt; about the methodology, only steps 1-4 were implemented. Now that system is at the last phase of development, it is a good chance to update the descriptions of the remaining steps:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Structural Analysis:&lt;/strong&gt; In order to automatically perform transformations to a law text based on a modification&amp;rsquo;s content, it is necessary to be aware of the structure of each law. Modifications refer to structural elements (such as articles, paragraphs, sub-paragraphs etc.) that a reader can easily search and identify within the text. However, a machine needs to analyze the text, processing natural language, to recognize these elements.This module of our system parses each law text, performs structural analysis and identifies the structural elements. Laws&amp;rsquo; structure follows distinct patterns, in the sense that laws should be written according to the rules set by the Central Legislatorial Committee that explicitly define the structural parts of the text. The appropriate regular expressions match the patterns that occur according to these rules. Pattern matching is done recursively for each detected structural element, finding its children elements and the same process goes on. After the recognition of these elements, an XML file for each law is generated. The analysis stops at the level of paragraphs, as this is the first visited element that may contain modifications when traversing the structural hierarchy from top to bottom.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Validation and Manual Editing:&lt;/strong&gt; Law texts may contain grammar or syntax errors and misprints. Moreover, rules and patterns are not always followed by law makers and while we had reviewed and incorporated in our system many cases of informal patterns, it is practically impossible to cover the total set of them. Hence, these problems result in incorrect XML files. In order to detect these problematic files, an XML validator was implemented. The validator checks if the hierarchy of the structural elements is followed and validates the numbering sequence of the elements, as most faults result in erroneous sequence due to unsuccessful elements detection. Those files that do not pass validation need manual editing and corrections. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Identification and Automatic Application of Modifications:&lt;/strong&gt; Modifications fell into three categories: addition, substitution or deletion of a text portion. In order to detect the patterns for these categories that should be transformed to regular expressions, we needed to identify the verbs that are used to declare each case, since they are usually the same or belong to a list of synonyms. For this purpose, we considered a random sample of 100 laws and using the Greek POS tagger from &lt;a href=&quot;http://nlp.cs.aueb.gr/software.html&quot;&gt;AUEB Natural Language Processing Group&lt;/a&gt;, we created a frequency matrix of the verbs found in the sample that are in present tense and passive voice. The most frequently used verbs (e.g. is replaced, is added etc.) that semantically belong to the above categories, along with their synonyms, were used to form the appropriate regular expressions. Nineteen regular expressions were formed that capture successfully 96,1% (1.789 out of 1.861) of modifications existing in the sample. It is interesting that only three regular expressions are adequate to detect 85% of all successfully matched cases. Pattern matching occurs at the level of paragraphs, so paragraphs are distinguished in amending and non-amending. According to the regular expression that returns a match in each case, we are able to know in which place there is the necessary information to perform the modification: modification category, cited law, referenced element, text to add or replace or text to delete. These data are used to annotate modifications in the XML files. When all modifications are identified and annotated, a script traverses all laws’ XML files in a chronological order and transforms the appropriate XML nodes (elements) according to the actions defined in the detected modifications, creating new file revisions. As mentioned earlier, structural analysis stops at the level of paragraphs. When a modification requires changes in a lower level (e.g. passage or case), paragraphs are broken down in passages using the &lt;a href=&quot;http://www.nltk.org/&quot;&gt;Python NLTK suite&lt;/a&gt;, which we trained using our sample corpus of 100 laws to get much better results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;XSL Transformation and Push to Repository:&lt;/strong&gt; In this last step the appropriate XSL transformations are applied to the XML files that represent laws revisions in order to generate user friendly text versions of them. These text revisions are then pushed in a &lt;a href=&quot;https://github.com/OpenLawsGR/greek_laws_alpha&quot;&gt;Github repository&lt;/a&gt;, an alpha version of which is already publically available.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Oct 2016 11:45:00 +0300</pubDate>
        <link>http://www.openlaws.gr/legislation/2016/10/17/revised-architecture/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/legislation/2016/10/17/revised-architecture/</guid>
      </item>
    
      <item>
        <title>New academic publications!</title>
        <description>&lt;p&gt;This month we were very happy to get notified that two papers describing our work, which we had submitted in two conferences were accepted!&lt;/p&gt;

&lt;p&gt;The first one will be presented as a full paper at the &lt;a href=&quot;http://pci2016.teiwest.gr/&quot;&gt;20th Panhellenic Conference on Informatics (PCI 2016)&lt;/a&gt; and its title is &amp;ldquo;A semi-automatic system for the consolidation of Greek legislative texts&amp;rdquo;. The abstract is as follows:
&amp;ldquo;The process of manually consolidating the historical revisions of law documents, by finding and applying in the appropriate chronological order all existing modifications to the original text, is usually tedious and mentally demanding. However, since legal language is highly structured, natural language processing techniques can be adopted to automate this process. In this paper, we present a semi-automatic system for the consolidation of Greek legislative texts, following an approach based on regular expressions. Consolidated versions of laws are pushed in a revision control system, enhancing open access to legislation. A manual step is necessary in order to fix system failures caused by syntax errors or related to wrong application of the legal rules by law makers.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;The second is a short paper that was accepted for a poster presentation at &lt;a href=&quot;http://jurix2016.unice.fr/&quot;&gt;Jurix 2016&lt;/a&gt; and its title is &amp;ldquo;Automatic identification, extraction and application of textual amendments in Greek legislative texts&amp;rdquo;. The abstract is as follows:
&amp;ldquo;The automatic analysis of legislative texts using Natural Language Processing techniques is able to facilitate several tasks related to the legislation lifecycle, such as the consolidation of different versions of legal documents. We present our work on the automatic identification, extraction and application of textual amendments in Greek legislative texts, based on pattern matching with regular expressions, which is part of a semi-automatic system for the consolidation of Greek laws.&amp;rdquo;&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Oct 2016 11:00:00 +0300</pubDate>
        <link>http://www.openlaws.gr/publications/2016/10/17/New-publications/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/publications/2016/10/17/New-publications/</guid>
      </item>
    
      <item>
        <title>Convert PDF law files to plain text using pdftotext</title>
        <description>&lt;p&gt;In a &lt;a href=&quot;http://www.openlaws.gr/legislation/code/2015/06/22/scrapying-greek-laws/&quot;&gt;previous post&lt;/a&gt;, we briefly presented a tutorial for downloading greek legislative texts using Scrapy. Having acquired and organized all law documents based on their year of publication, it is important to transform them in plain text format in order to start their analysis using natural language processing techniques. PDF is a format that is not easily processable and in order to perform the task of transformation, we introduce &lt;a href=&quot;http://linux.die.net/man/1/pdftotext&quot;&gt;pdftotext&lt;/a&gt;, an open source utility for Linux, appropriate for such operations.&lt;/p&gt;

&lt;p&gt;Below we present a short description of the code which implements the required transformation. The first step is to define the source (where the files exist) and the destination folder (where the plain texts will be stored). For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/path/to/laws/folder/&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;text_dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/path/to/destination/&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, we traverse all the files one by one in the source path and we call &lt;a href=&quot;https://docs.python.org/2/library/subprocess.html&quot;&gt;subprocess&lt;/a&gt;, a module that allows us to spawn new processes (it provides the same functionality as if someone was writing commands in the terminal). Here is a short description of the code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;topdown&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;pdftotext&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;-raw&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Although the &lt;em&gt;-raw&lt;/em&gt; is a parameter that is no longer recommended according to the tutorial, it is an important option in our transformation as our analysis showed that it keeps text in content stream order (Greek legislative texts are written in two columns). In the image below we present an example of legal content in a PDF file (left part) and its transformation in plain text (right part). &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pdftotext.jpg&quot; alt=&quot;Example of PDF transformation to plain text&quot;&gt;&lt;/p&gt;

&lt;p&gt;Our further analysis in the generated plain texts also designated some problems that could have a detrimental effect in further analysis and processing, some of which are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Absence or wrong text encoding.&lt;/strong&gt; Some PDF files lack information about text encoding and as a result the generated texts have wrong characters. This problem occur mainly in laws published between 2000 and 2005. An extra step of character matching is needed in order to acquire the proper legal text. There are also PDF files that did not provide encoding at all (e.g. Law 4028/2011) and no character matching could be beneficial.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Scanned Documents.&lt;/strong&gt; Unfortunately, legislative texts before 2004 are published as scanned documents or text in other languages (e.g. laws approving international agreements) and as a result an OCR (Optical Character Recognition) processing is necessary for their transformation. These images are often of low quality, sometimes with skew positioning and contrast variation. Such a process usually introduce errors in the produced text files and require other techniques such as training other tools (e.g. tessaract) which is out of the scope of this post. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Table data.&lt;/strong&gt; Tables in PDF are of special concern due to the fact that there is no information about them in a format like PDF. PDF files provides no information about where headers, rows and columns begin or end, and how data is organized (as it happens for example with HTML pages through the use of tags). Table transformation revealed that data was scattered, in an unorganized way or even missing from the document, a major effect as correct and up-to-date legal data is important for further content analysis techniques. &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 12 Jul 2016 16:15:00 +0300</pubDate>
        <link>http://www.openlaws.gr/legislation/code/2016/07/12/Convert-PDF-law-files-to-plain-text/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/legislation/code/2016/07/12/Convert-PDF-law-files-to-plain-text/</guid>
      </item>
    
      <item>
        <title>Review of the Greek research community working on the legal tech field</title>
        <description>&lt;p&gt;In this post, we briefly review some research efforts related to legal text analysis from the Greek research community. Unfortunately, natural language processing of Greek legal texts seems to be a domain with only limited activity.&lt;/p&gt;

&lt;p&gt;One researcher active in this area is &lt;a href=&quot;http://www.wcl.ece.upatras.gr/el/ai/people/charalampos-tsimpouris&quot;&gt;Charalampos Tsimpouris&lt;/a&gt;, who is a Phd student at the Department of Electrical &amp;amp; Computer Engineering of the University of Patras. He has published a paper entitled &lt;a href=&quot;http://dx.doi.org/10.1093/llc/fqu009&quot;&gt;&amp;ldquo;Acronym identification in Greek legal texts&amp;rdquo;&lt;/a&gt;. The algorithm for the identification of the acronyms is described (in Greek language) &lt;a href=&quot;https://sites.google.com/site/acronymrecognition/pattern-matching-algorithms/acronym-identification-in-greek-legal-texts&quot;&gt;here&lt;/a&gt;. A Greek version of this paper can also be found &lt;a href=&quot;http://www.eleto.gr/download/Conferences/9th%20Conference/Papers-and-speakers/9th_26-21-20-TsimpourisCharalampos-SgarbasKyriakos_Paper_V04.pdf&quot;&gt;here&lt;/a&gt;. Moreover, he has submitted another paper entitled &lt;a href=&quot;http://www.wcl.ece.upatras.gr/el/node/712&quot;&gt;&amp;ldquo;Automatic Classification of Greek Legal Documents&amp;rdquo;&lt;/a&gt;, which is not however yet published. Finally, one can visit his &lt;a href=&quot;https://github.com/xtsimpouris&quot;&gt;github account&lt;/a&gt;, where, among others, there is a &lt;a href=&quot;https://github.com/xtsimpouris/gr-nlp-law&quot;&gt;sentence segmenter&lt;/a&gt; for the python natural language processing tool NLTK, trained from a Greek legal corpus.&lt;/p&gt;

&lt;p&gt;Another researcher active in this field is &lt;a href=&quot;https://gr.linkedin.com/in/iliaschalkidis&quot;&gt;Ilias Chalkidis&lt;/a&gt;, who is an MsC student and research associate at National &amp;amp; Kapodistrian University of Athens. His undergraduate &lt;a href=&quot;https://www.dropbox.com/s/zle8mqlm6yyxooi/thesis.pdf?dl=0&quot;&gt;thesis&lt;/a&gt; was about a platform where Greek legislation can be published in a machine readable format and as linked data. The &lt;a href=&quot;http://cgi.di.uoa.gr/%7Estd07122/index&quot;&gt;original platform&lt;/a&gt; was improved and is now available &lt;a href=&quot;http://legislation.di.uoa.gr/&quot;&gt;here&lt;/a&gt;. The source code (including a legal parser) is available in &lt;a href=&quot;https://github.com/KiddoTheGreek&quot;&gt;github&lt;/a&gt;. His relevant publications include a paper published in a student conference entitled &amp;ldquo;Modeling and Querying Greek Legislation using Semantic Web Technologies&amp;rdquo; (the presentation can be found &lt;a href=&quot;http://www.slideshare.net/ihalk/modeling-and-querying-greek-legislation-using-semantic-web-technologies-48162244&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Finally, &lt;a href=&quot;http://www.dbnet.ntua.gr/%7Emkoniari/&quot;&gt;Marios Koniaris&lt;/a&gt;, a Phd student at the Department of Electrical &amp;amp; Computer Engineering of the National Technical University of Athens, has published two papers, although not related to the Greek legislation, but to that of the European Union. The first one is under the title &lt;a href=&quot;http://www.dbnet.ntua.gr/%7Emkoniari/docs/jurix14.pdf&quot;&gt;&amp;ldquo;Legislation as a complex network: Modelling and analysis over the European Union law&amp;rdquo;&lt;/a&gt;, while the second under the title &lt;a href=&quot;http://arxiv.org/pdf/1501.05237.pdf&quot;&gt;&amp;ldquo;Network Analysis in the Legal Domain: A complex model for European Union legal sources&amp;rdquo;&lt;/a&gt;. His &lt;a href=&quot;http://www.dbnet.ntua.gr/%7Emkoniari/docs/KoniarisDIPLOEAP.pdf&quot;&gt;master thesis&lt;/a&gt;, though, is related to the application of semantic web technologies for the organization and retrieval of issues of the Government Gazzette. The respective presentation can be found &lt;a href=&quot;http://www.dbnet.ntua.gr/%7Emkoniari/docs/KoniarisDIPLOEAP.pres.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Marios Koniaris, George Papastefanatos and Yannis Vassiliou have published a paper titled &amp;ldquo;Towards Automatic Structuring and Semantic Indexing of Legal Documents&amp;rdquo; at the 20th Panhellenic Conference on Informatics. More info is available in a Github &lt;a href=&quot;https://github.com/mkoniari/LegalParser&quot;&gt;page&lt;/a&gt; they have set up.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Nov 2015 23:50:00 +0200</pubDate>
        <link>http://www.openlaws.gr/publications/2015/11/03/greek-research-community/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/publications/2015/11/03/greek-research-community/</guid>
      </item>
    
      <item>
        <title>PCI2015</title>
        <description>&lt;p&gt;Today, it was the last day of the &lt;a href=&quot;http://pci2015.teiath.gr&quot;&gt;19th Panhellenic Conference on Informatics (PCI 2015)&lt;/a&gt;, which was held in Athens from 1-3 October 2015. In this conference we had the chance to discuss some initial results of our work in progress and especially some of the problems that we are facing, as (as announced in a &lt;a href=&quot;http://www.openlaws.gr/publications/2015/06/29/PCI2015/&quot;&gt;previous post&lt;/a&gt;) we were presenting a short paper entitled &amp;ldquo;Automated Analysis of Greek Legislative Texts for Version Control: Limitations, Caveats and Challenges&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/presentation_pci2015.jpg&quot; alt=&quot;Presenting the paper&quot;&gt;&lt;/p&gt;

&lt;p&gt;The audience seemed to be as excited as we are on this work, which we believe it is an encouraging indicator of the importance of this project not only for the scientific community, but also for the general public.&lt;/p&gt;

&lt;p&gt;The short paper as printed in the conference proceedings is available &lt;a href=&quot;http://dl.acm.org/citation.cfm?id=2801948.2802037&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, the presentation can be downloaded from &lt;a href=&quot;https://www.dropbox.com/s/thyijzicucllv5q/pci2015_presentation.pdf?dl=0&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 03 Oct 2015 20:50:00 +0300</pubDate>
        <link>http://www.openlaws.gr/publications/2015/10/03/PCI2015/</link>
        <guid isPermaLink="true">http://www.openlaws.gr/publications/2015/10/03/PCI2015/</guid>
      </item>
    
  </channel>
</rss>
